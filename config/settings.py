"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

import environ
from corsheaders.defaults import default_headers

env = environ.Env(
    # set casting, default value
    ENVIRONMENT=(str, "production"),
    API_TITLE=(str),
    API_VERSION=(str),
    DEBUG=(bool, False),
    ALLOWED_HOSTS=(list),
    CORS_ALLOWED_ORIGINS=(list),
    CSRF_TRUSTED_ORIGINS=(list),
    DATABASE_NAME=(str, "postgres"),
    DATABASE_USER=(str, "postgres"),
    DATABASE_PASSWORD=(str, ""),
    DATABASE_HOST=(str, "localhost"),
    DATABASE_PORT=(str, "5432"),
    CSRF_COOKIE_SECURE=(bool, True),
    SESSION_COOKIE_SECURE=(bool, True),
    SESSION_COOKIE_SAMESITE=(str, "Lax"),
    AUTH_TOKEN_COOKIE_NAME=(str),
    # REDIS_LOCATION=(str),
    # REDIS_ENDPOINT=(str, "localhost"),
    # REDIS_PORT=(int, 6379),
    # REDIS_PASSWORD=(str),
    RABBITMQ_HOST=(str),
    RABBITMQ_HTTP_PORT=(str),
    RABBITMQ_PORT=(str),
    RABBITMQ_DEFAULT_USERNAME=(str),
    RABBITMQ_DEFAULT_PASSWORD=(str),
    RABBITMQ_BROKER_URL=(str),
    CELERY_BROKER_URL_VHOST=(str),
    FRONTEND_URL=(str),
)

ENVIRONMENT = env("ENVIRONMENT")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

environ.Env.read_env(Path(BASE_DIR, ".env"))

DEBUG = env("DEBUG")

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-dvq^5ku6yxl)s%vk+a$oa=_b6gq6!)^5(b!volzfq*un43*=%l"


ALLOWED_HOSTS = []


# Application definition


# Application definition
DEFAULT_APPS = (
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
)

THIRD_PARTY_APPS = (
    "whitenoise.runserver_nostatic",
    "django.contrib.staticfiles",  # needs to be after whitenoise
    "django_extensions",
    "corsheaders",
    "strawberry.django",
    # "django_celery_beat",
)

LOCAL_APPS = (
    "graphql_api",
    "authorization",
)

INSTALLED_APPS = DEFAULT_APPS + THIRD_PARTY_APPS + LOCAL_APPS

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "config.middleware.whitenoise_middleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

ASGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

AUTH_USER_MODEL = "authorization.User"


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
STORAGES = {
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage"
    },
}

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

STRAWBERRY_DJANGO = {
    "FIELD_DESCRIPTION_FROM_HELP_TEXT": True,
    "TYPE_DESCRIPTION_FROM_MODEL_DOCSTRING": True,
}


# CORS
FINGERPRINT_HEADER = "x-fingerprint"
CORS_ALLOWED_ORIGINS = [] + env("CORS_ALLOWED_ORIGINS")
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_HEADERS = list(default_headers) + [
    "sentry-trace",
    "baggage",
    "x-app",
    "x-app-version",
    FINGERPRINT_HEADER,
]

# CSRF
CSRF_TRUSTED_ORIGINS = [] + env("CSRF_TRUSTED_ORIGINS")
CSRF_USE_SESSIONS = True
CSRF_COOKIE_SECURE = env("CSRF_COOKIE_SECURE")
SESSION_COOKIE_SECURE = env("SESSION_COOKIE_SECURE")
SESSION_COOKIE_SAMESITE = env("SESSION_COOKIE_SAMESITE")

# API
API_TITLE = env("API_TITLE")
API_VERSION = env("API_VERSION")
